TREE-SEARCH(x,k)                            #x is the pointer to the parent node and k is the value to be searched
  if x==NIL or k==x.key
    return x
  if k < x.key
    return TREE-SEARCH(x.left,k)
  else 
    return TREE-SEARCH(x.right,k)
    
The running time of TREE-SEARCH is O(h) where h is the height of the tree
 Bdw in most computers, the iterative version is more efficient
 
 ITERATIVE-TREE-SEARCH(x,k)
   while x != NIL and k != x.key
      if k < x.key
          x = x.left
      else 
          x = x.right
   return x
   
   Maximum and Minimum
   
   TREE-MINIMUM(x)
      while x.left != NIL
          x = x.left
      return x
      
   TREE-MAXIMUM(x)
      while x.right != NIL
          x = x.right
      return x
      
 Both the procedures run in O(h) time on a tree of height h

  TREE-SUCCESSOR(x)
      if x.right != NIL
          return TREE-MINIMUM(x.right)
      y = x.p
      while y!= NIL and x==y.right
          x = y
          y = y.p
      return y
